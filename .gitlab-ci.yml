image: gitlab/dind
services:
  - docker:dind

variables:
  REPO: springbootlabtest
  DOCKER_REGISTRY: 552166557473.dkr.ecr.us-east-1.amazonaws.com
  APP_NAME: springdemo
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  CLUSTER_NAME: eksdemo
  DEPLOYMENT_NAME: springboot

stages:
  - build
  - test
  - docker
  - apply

maven-build:
  image: maven:3-jdk-8
  stage: build
  script: "mvn clean package -B"
  artifacts:
    paths:
      - target/*.jar

maven-test:
  image: maven:3-jdk-8
  stage: test
  script: echo test
  artifacts:
    paths:
      - target/*.jar

docker-build:
  stage: docker
  image: 
    name: docker:latest
  services:
    - docker:19-dind
  before_script:
    - apk add --no-cache curl jq python3 py3-pip
    - pip install awscli
    - aws ecr get-login-password | docker login --username AWS --password-stdin $DOCKER_REGISTRY
    - aws --version
    - docker info
    - docker --version
  script:
    - docker build -t $DOCKER_REGISTRY/$APP_NAME:$CI_PIPELINE_IID .
    - docker push $DOCKER_REGISTRY/$APP_NAME:$CI_PIPELINE_IID

.kubectl_config: &kubectl_config
- aws eks --region us-east-1 update-kubeconfig --name eksdemo

docker-apply:
  stage: apply
  image: 
    name: docker.io/sulemanhasib43/eks:latest
  variables:
    K8S_NAMESPACE: default
  before_script: *kubectl_config
  script:
    - kubectl version
    - kubectl apply -f springboot-deployment.yaml
    - kubectl apply -f springboot-service.yaml
    - kubectl get all
